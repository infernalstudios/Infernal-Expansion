/*
 * Copyright 2023 Infernal Studios
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.infernalstudios.infernalexp.data.providers.lang;

import net.minecraft.data.DataGenerator;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.registries.ForgeRegistries;
import org.infernalstudios.infernalexp.InfernalExpansion;
import org.infernalstudios.infernalexp.init.IEBiomes;
import org.infernalstudios.infernalexp.init.IEBlocks;
import org.infernalstudios.infernalexp.init.IEEffects;
import org.infernalstudios.infernalexp.init.IEEntityTypes;
import org.infernalstudios.infernalexp.init.IEItems;

public class JaJpLanguageProvider extends IELanguageProvider {


    public JaJpLanguageProvider(DataGenerator generator) {
        super(generator, "ja_jp");
    }

    @Override
    protected void addTranslations() {
        add(InfernalExpansion.TAB, "インファーナル・エキスパンション");
        add(Blocks.GLOWSTONE, "グロウストーン");
        add(IEBlocks.DIMSTONE.get(), "ディムストーン");
        add(IEBlocks.DULLSTONE.get(), "ダルストーン");
        add(IEBlocks.SMOOTH_GLOWSTONE.get(), "滑らかなグロウストーン");
        add(IEBlocks.SMOOTH_DIMSTONE.get(), "滑らかなディムストーン");
        add(IEBlocks.SMOOTH_DULLSTONE.get(), "滑らかなダルストーン");
        add(IEBlocks.GLOWSTONE_BRICKS.get(), "グロウストーンレンガ");
        add(IEBlocks.DIMSTONE_BRICKS.get(), "ディムストーンレンガ");
        add(IEBlocks.DULLSTONE_BRICKS.get(), "ダルストーンレンガ");
        add(IEBlocks.CRACKED_GLOWSTONE_BRICKS.get(), "ひび割れたグロウストーンレンガ");
        add(IEBlocks.CRACKED_DIMSTONE_BRICKS.get(), "ひび割れたディムストーンレンガ");
        add(IEBlocks.CRACKED_DULLSTONE_BRICKS.get(), "ひび割れたダルストーンレンガ");
        add(IEBlocks.CHISELED_GLOWSTONE_BRICKS.get(), "模様入りのグロウストーンレンガ");
        add(IEBlocks.CHISELED_DIMSTONE_BRICKS.get(), "模様入りのディムストーンレンガ");
        add(IEBlocks.CHISELED_DULLSTONE_BRICKS.get(), "模様入りのダルストーンレンガ");
        add(IEBlocks.SMOOTH_GLOWSTONE_SLAB.get(), "滑らかなグロウストーンのハーフブロック");
        add(IEBlocks.SMOOTH_GLOWSTONE_VERTICAL_SLAB.get(), "滑らかなグロウストーンの縦ハーフブロック");
        add(IEBlocks.SMOOTH_GLOWSTONE_STAIRS.get(), "滑らかなグロウストーンの階段");
        add(IEBlocks.SMOOTH_GLOWSTONE_BUTTON.get(), "滑らかなグロウストーンのボタン");
        add(IEBlocks.SMOOTH_GLOWSTONE_PRESSURE_PLATE.get(), "滑らかなグロウストーンの感圧板");
        add(IEBlocks.SMOOTH_DIMSTONE_SLAB.get(), "滑らかなディムストーンのハーフブロック");
        add(IEBlocks.SMOOTH_DIMSTONE_VERTICAL_SLAB.get(), "滑らかなディムストーンの縦ハーフブロック");
        add(IEBlocks.SMOOTH_DIMSTONE_STAIRS.get(), "滑らかなディムストーンの階段");
        add(IEBlocks.SMOOTH_DIMSTONE_BUTTON.get(), "滑らかなディムストーンのボタン");
        add(IEBlocks.SMOOTH_DULLSTONE_SLAB.get(), "滑らかなダルストーンのハーフブロック");
        add(IEBlocks.SMOOTH_DULLSTONE_VERTICAL_SLAB.get(), "滑らかなダルストーンの縦ハーフブロック");
        add(IEBlocks.SMOOTH_DULLSTONE_STAIRS.get(), "滑らかなダルストーンの階段");
        add(IEBlocks.SMOOTH_DULLSTONE_BUTTON.get(), "滑らかなダルストーンのボタン");
        add(IEBlocks.GLOWSTONE_BRICK_SLAB.get(), "グロウストーンレンガのハーフブロック");
        add(IEBlocks.GLOWSTONE_BRICK_VERTICAL_SLAB.get(), "グロウストーンレンガの縦ハーフブロック");
        add(IEBlocks.GLOWSTONE_BRICK_STAIRS.get(), "グロウストーンレンガの階段");
        add(IEBlocks.GLOWSTONE_BRICK_WALL.get(), "グロウストーンレンガの塀");
        add(IEBlocks.DIMSTONE_BRICK_SLAB.get(), "ディムストーンレンガのハーフブロック");
        add(IEBlocks.DIMSTONE_BRICK_VERTICAL_SLAB.get(), "ディムストーンレンガの縦ハーフブロック");
        add(IEBlocks.DIMSTONE_BRICK_STAIRS.get(), "ディムストーンレンガの階段");
        add(IEBlocks.DIMSTONE_BRICK_WALL.get(), "ディムストーンレンガの塀");
        add(IEBlocks.DULLSTONE_BRICK_SLAB.get(), "ダルストーンレンガのハーフブロック");
        add(IEBlocks.DULLSTONE_BRICK_VERTICAL_SLAB.get(), "ダルストーンレンガの縦ハーフブロック");
        add(IEBlocks.DULLSTONE_BRICK_STAIRS.get(), "ダルストーンレンガの階段");
        add(IEBlocks.DULLSTONE_BRICK_WALL.get(), "ダルストーンレンガの塀");
        add(IEBlocks.LUMINOUS_WART_BLOCK.get(), "輝くウォートブロック");
        add(IEBlocks.GLOWDUST.get(), "きらめく塵");
        add(IEBlocks.GLOWDUST_SAND.get(), "きらめく砂");
        add(IEBlocks.GLOWDUST_STONE.get(), "きらめく石");
        add(IEBlocks.GLOWDUST_STONE_SLAB.get(), "きらめく石のハーフブロック");
        add(IEBlocks.GLOWDUST_STONE_VERTICAL_SLAB.get(), "きらめく石の縦ハーフブロック");
        add(IEBlocks.GLOWDUST_STONE_STAIRS.get(), "きらめく石の階段");
        add(IEBlocks.GLOWDUST_STONE_WALL.get(), "きらめく石の塀");
        add(IEBlocks.TRAPPED_GLOWDUST_SAND.get(), "きらめく砂利");
        add(IEBlocks.GLOW_FIRE.get(), null);
        add(IEBlocks.GLOWDUST_STONE_BRICKS.get(), "きらめく石レンガ");
        add(IEBlocks.GLOWDUST_STONE_BRICK_SLAB.get(), "きらめく石レンガのハーフブロック");
        add(IEBlocks.GLOWDUST_STONE_BRICK_VERTICAL_SLAB.get(), "きらめく石レンガの縦ハーフブロック");
        add(IEBlocks.GLOWDUST_STONE_BRICK_STAIRS.get(), "きらめく石レンガの階段");
        add(IEBlocks.GLOWDUST_STONE_BRICK_WALL.get(), "きらめく石レンガの塀");
        add(IEBlocks.CRACKED_GLOWDUST_STONE_BRICKS.get(), "ひび割れたきらめく石レンガ");
        add(IEBlocks.CHISELED_GLOWDUST_STONE_BRICKS.get(), "模様入りのきらめく石レンガ");
        add(IEBlocks.CRUMBLING_BLACKSTONE.get(), "ひび割れたブラックストーン");
        add(IEBlocks.SILT.get(), "玄武岩の泥土");
        add(IEBlocks.RUBBLE.get(), "ブラックストーンのがれき");
        add(IEBlocks.DULLTHORNS_BLOCK.get(), "ダルソーンブロック");
        add(IEBlocks.BASALT_COBBLED.get(), "玄武岩の丸石");
        add(IEBlocks.BASALT_COBBLED_SLAB.get(), "玄武岩の丸石のハーフブロック");
        add(IEBlocks.BASALT_COBBLED_VERTICAL_SLAB.get(), "玄武岩の丸石の縦ハーフブロック");
        add(IEBlocks.BASALT_WALL.get(), "玄武岩の塀");
        add(IEBlocks.BASALT_STAIRS.get(), "玄武岩の階段");
        add(IEBlocks.BASALT_BUTTON.get(), "玄武岩のボタン");
        add(IEBlocks.BASALT_SLAB.get(), "玄武岩のハーフブロック");
        add(IEBlocks.BASALT_VERTICAL_SLAB.get(), "玄武岩の縦ハーフブロック");
        add(IEBlocks.POLISHED_BASALT_PRESSURE_PLATE.get(), "磨かれた玄武岩の感圧板");
        add(IEBlocks.POLISHED_BASALT_SLAB.get(), "磨かれた玄武岩のハーフブロック");
        add(IEBlocks.POLISHED_BASALT_VERTICAL_SLAB.get(), "磨かれた玄武岩の縦ハーフブロック");
        add(IEBlocks.POLISHED_BASALT_TILES_SLAB.get(), "磨かれた玄武岩タイルのハーフブロック");
        add(IEBlocks.POLISHED_BASALT_TILES_VERTICAL_SLAB.get(), "磨かれた玄武岩タイルの縦ハーフブロック");
        add(IEBlocks.POLISHED_BASALT_TILES.get(), "磨かれた玄武岩タイル");
        add(IEBlocks.BASALT_BRICKS.get(), "玄武岩レンガ");
        add(IEBlocks.BASALT_BRICK_WALL.get(), "玄武岩レンガの塀");
        add(IEBlocks.BASALT_BRICK_STAIRS.get(), "玄武岩レンガの階段");
        add(IEBlocks.BASALT_BRICK_SLAB.get(), "玄武岩レンガのハーフブロック");
        add(IEBlocks.BASALT_BRICK_VERTICAL_SLAB.get(), "玄武岩レンガの縦ハーフブロック");
        add(IEBlocks.CRACKED_BASALT_BRICKS.get(), "ひび割れた玄武岩レンガ");
        add(IEBlocks.CHISELED_BASALT_BRICKS.get(), "模様入りの玄武岩レンガ");
        add(IEBlocks.MAGMATIC_CHISELED_BASALT_BRICKS.get(), "マグマの染み込んだ模様入りの玄武岩レンガ");
        add(IEBlocks.BASALT_IRON_ORE.get(), "玄武岩の鉄鉱石");
        add(IEBlocks.BASALTIC_MAGMA.get(), "玄武岩のマグマブロック");
        add(IEBlocks.SOUL_SAND_STAIRS.get(), "ソウルサンドの階段");
        add(IEBlocks.SOUL_SAND_SLAB.get(), "ソウルサンドのハーフブロック");
        add(IEBlocks.SOUL_SAND_VERTICAL_SLAB.get(), "ソウルサンドの縦ハーフブロック");
        add(IEBlocks.SOUL_SOIL_STAIRS.get(), "ソウルソイルの階段");
        add(IEBlocks.SOUL_SOIL_SLAB.get(), "ソウルソイルのハーフブロック");
        add(IEBlocks.SOUL_SOIL_VERTICAL_SLAB.get(), "ソウルソイルの縦ハーフブロック");
        add(IEBlocks.SOUL_STONE.get(), "ソウルストーン");
        add(IEBlocks.SOUL_STONE_SLAB.get(), "ソウルストーンのハーフブロック");
        add(IEBlocks.SOUL_STONE_VERTICAL_SLAB.get(), "ソウルストーンの縦ハーフブロック");
        add(IEBlocks.SOUL_STONE_STAIRS.get(), "ソウルストーンの階段");
        add(IEBlocks.SOUL_STONE_WALL.get(), "ソウルストーンの塀");
        add(IEBlocks.SOUL_STONE_BRICKS.get(), "ソウルストーンレンガ");
        add(IEBlocks.SOUL_STONE_BRICK_WALL.get(), "ソウルストーンレンガの塀");
        add(IEBlocks.SOUL_STONE_BRICK_STAIRS.get(), "ソウルストーンレンガの階段");
        add(IEBlocks.SOUL_STONE_BRICK_SLAB.get(), "ソウルストーンレンガのハーフブロック");
        add(IEBlocks.SOUL_STONE_BRICK_VERTICAL_SLAB.get(), "ソウルストーンレンガの縦ハーフブロック");
        add(IEBlocks.CRACKED_SOUL_STONE_BRICKS.get(), "ひび割れたソウルストーンレンガ");
        add(IEBlocks.CHISELED_SOUL_STONE_BRICKS.get(), "模様入りのソウルストーンレンガ");
        add(IEBlocks.CHARGED_CHISELED_SOUL_STONE_BRICKS.get(), "チャージされた模様入りのソウルストーンレンガ");
        add(IEBlocks.SOUL_SLATE.get(), "ソウルスレート");
        add("block." + InfernalExpansion.MOD_ID + ".soul_slate_wall", "ソウルスレートの塀");
        add(IEBlocks.SOUL_SLATE_STAIRS.get(), "ソウルスレートの階段");
        add(IEBlocks.SOUL_SLATE_BUTTON.get(), "ソウルスレートのボタン");
        add(IEBlocks.SOUL_SLATE_SLAB.get(), "ソウルスレートのハーフブロック");
        add(IEBlocks.SOUL_SLATE_VERTICAL_SLAB.get(), "ソウルスレートの縦ハーフブロック");
        add(IEBlocks.SOUL_SLATE_PRESSURE_PLATE.get(), "ソウルスレートの感圧板");
        add(IEBlocks.SOUL_SLATE_BRICKS.get(), "ソウルスレートレンガ");
        add(IEBlocks.SOUL_SLATE_BRICK_WALL.get(), "ソウルスレートレンガの塀");
        add(IEBlocks.SOUL_SLATE_BRICK_STAIRS.get(), "ソウルスレートレンガの階段");
        add(IEBlocks.SOUL_SLATE_BRICK_SLAB.get(), "ソウルスレートレンガのハーフブロック");
        add(IEBlocks.SOUL_SLATE_BRICK_VERTICAL_SLAB.get(), "ソウルスレートレンガの縦ハーフブロック");
        add(IEBlocks.CRACKED_SOUL_SLATE_BRICKS.get(), "ひび割れたソウルスレートレンガ");
        add(IEBlocks.CHISELED_SOUL_SLATE_BRICKS.get(), "模様入りのソウルスレートレンガ");
        add(IEBlocks.CHARGED_CHISELED_SOUL_SLATE_BRICKS.get(), "チャージされた模様入りのソウルスレートレンガ");
        add(IEBlocks.CRIMSON_FUNGUS_CAP.get(), "真紅のキノコの笠");
        add(IEBlocks.WARPED_FUNGUS_CAP.get(), "歪んだキノコの笠");
        add(IEBlocks.LUMINOUS_FUNGUS_CAP.get(), "輝くキノコの笠");
        add(IEBlocks.SHROOMLIGHT_FUNGUS.get(), "シュルームライトの涙");
        add(IEBlocks.BURIED_BONE.get(), "埋まった骨");
        add(IEBlocks.PLANTED_QUARTZ.get(), "生えているクォーツ");
        add(IEBlocks.WARPED_NYLIUM_PATH.get(), "歪んだナイリウムの道");
        add(IEBlocks.CRIMSON_NYLIUM_PATH.get(), "真紅のナイリウムの道");
        add(IEBlocks.GLOW_LANTERN.get(), "グロウライトランタン");
        add(IEBlocks.GLOW_TORCH.get(), "グロウライトの松明");
        add(IEBlocks.GLOW_CAMPFIRE.get(), "グロウライトの焚火");
        add(IEBlocks.GLOW_GLASS.get(), "グロウライトのガラス");
        add(IEBlocks.GLOW_GLASS_PANE.get(), "グロウライトの板ガラス");
        add(IEBlocks.LUMINOUS_FUNGUS.get(), "輝くキノコ");
        add(IEBlocks.DULLTHORNS.get(), "ダルソーン");
        add(IEBlocks.GLOWSILK_COCOON.get(), "グロウシルクの繭");
        add(IEBlocks.WARPED_NYLIUM_CARPET.get(), "歪んだナイリウムのカーペット");
        add(IEBlocks.CRIMSON_NYLIUM_CARPET.get(), "真紅のナイリウムのカーペット");
        add(IEBlocks.SOUL_SOIL_PATH.get(), "ソウルソイルの道");
        add(IEBlocks.QUARTZ_GLASS.get(), "クォーツのガラス");
        add(IEBlocks.QUARTZ_GLASS_PANE.get(), "クォーツの板ガラス");
        add(Blocks.NETHER_SPROUTS, "歪んだ新芽");
        add(Blocks.NETHER_WART_BLOCK, "真紅のウォートブロック");
        add(IEItems.GLOWCOAL.get(), "グロウコーク");
        add(IEItems.DULLROCKS.get(), "ダルロック");
        add(IEItems.BLINDSIGHT_TONGUE.get(), "ブラインドサイトの舌");
        add(IEItems.MOTH_DUST.get(), "グロウシルクモスの粉");
        add(IEItems.MOLTEN_GOLD_CLUSTER.get(), "溶けた金塊");
        add(IEItems.GLOWSILK.get(), "グロウシルク");
        add(IEItems.SOUL_SALT_CLUMP.get(), "魂の塩の塊");
        add(IEItems.INFERNAL_PAINTING.get(), "ネザーの絵画");
        add(IEItems.STRIDER_BUCKET.get(), "ストライダー入りのバケツ");
        add(IEItems.MAGMA_CUBE_BUCKET.get(), "マグマキューブ入りのバケツ");
        add(IEItems.VOLINE_BUCKET.get(), "ヴォリン入りのバケツ");
        add(IEItems.BLINDSIGHT_TONGUE_STEW.get(), "キノコと舌のシチュー");
        add(IEItems.CURED_JERKY.get(), "干し肉");
        add(IEItems.RAW_HOGCHOP.get(), "生のホグリン肉");
        add(IEItems.COOKED_HOGCHOP.get(), "焼いたホグリン肉");
        add(IEItems.ASCUS_BOMB.get(), "胞子爆弾");
        add("item." + InfernalExpansion.MOD_ID + ".frostbitten_sword", "氷漬けのネザライトの剣");
        add("item." + InfernalExpansion.MOD_ID + ".frostbitten_pickaxe", "氷漬けのネザライトのツルハシ");
        add("item." + InfernalExpansion.MOD_ID + ".frostbitten_axe", "氷漬けのネザライトの斧");
        add("item." + InfernalExpansion.MOD_ID + ".frostbitten_shovel", "氷漬けのネザライトのシャベル");
        add("item." + InfernalExpansion.MOD_ID + ".frostbitten_hoe", "氷漬けのネザライトのクワ");
        add(IEItems.GLOWSILK_BOW.get(), "グロウシルクの弓");
        add(IEItems.BLINDSIGHT_TONGUE_WHIP.get(), "ブラインドサイトの舌の鞭");
        add(IEItems.VOLINE_SPAWN_EGG.get(), "ヴォリンのスポーンエッグ");
        add(IEItems.SHROOMLOIN_SPAWN_EGG.get(), "シュルームロインのスポーンエッグ");
        add(IEItems.WARPBEETLE_SPAWN_EGG.get(), "ワープビートルのスポーンエッグ");
        add(IEItems.EMBODY_SPAWN_EGG.get(), "エンボディーのスポーンエッグ");
        add(IEItems.BASALT_GIANT_SPAWN_EGG.get(), "バサルトジャイアントのスポーンエッグ");
        add(IEItems.BLACKSTONE_DWARF_SPAWN_EGG.get(), "ブラックストーンドワーフのスポーンエッグ");
        add(IEItems.GLOWSQUITO_SPAWN_EGG.get(), "グロウスキートのスポーンエッグ");
        add(IEItems.BLINDSIGHT_SPAWN_EGG.get(), "ブラインドサイトのスポーンエッグ");
        add(IEItems.GLOWSILK_MOTH_SPAWN_EGG.get(), "グロウシルクモスのスポーンエッグ");
        add("item." + InfernalExpansion.MOD_ID + ".cerobeetle_spawn_egg", "セロビートルのスポーンエッグ");
        add("item." + InfernalExpansion.MOD_ID + ".pyrno_spawn_egg", "ピルノのスポーンエッグ");
        addMusicDisc(IEItems.MUSIC_DISC_SOUL_SPUNK.get(), "レコード", null);
        addMusicDisc(IEItems.MUSIC_DISC_FLUSH.get(), "レコード", null);
        add(IEEntityTypes.VOLINE.get(), "ヴォリン");
        add(IEEntityTypes.SHROOMLOIN.get(), "シュルームロイン");
        add(IEEntityTypes.WARPBEETLE.get(), "ワープビートル");
        add(IEEntityTypes.EMBODY.get(), "エンボディー");
        add(IEEntityTypes.BASALT_GIANT.get(), "バサルトジャイアント");
        add(IEEntityTypes.BLACKSTONE_DWARF.get(), "ブラックストーンドワーフ");
        add(IEEntityTypes.GLOWSQUITO.get(), "グロウスキート");
        add(IEEntityTypes.BLINDSIGHT.get(), "ブラインドサイト");
        add(IEEntityTypes.GLOWSILK_MOTH.get(), "グロウシルクモス");
        add(IEEntityTypes.ASCUS_BOMB.get(), null);
        add(IEEntityTypes.THROWABLE_MAGMA_CREAM.get(), null);
        add(IEEntityTypes.THROWABLE_FIRE_CHARGE.get(), null);
        add(IEEntityTypes.THROWABLE_BRICK.get(), null);
        add(IEEntityTypes.THROWABLE_NETHER_BRICK.get(), null);
        add(IEEntityTypes.INFERNAL_PAINTING.get(), null);
        add("entity." + InfernalExpansion.MOD_ID + ".pyrno", "ピルノ");
        add(IEBiomes.GLOWSTONE_CANYON, "グロウストーンの渓谷");
        add("biome." + InfernalExpansion.MOD_ID + ".delta_shores", "三角州の海岸");
        addEffect(IEEffects.LUMINOUS.get(), "光輝");
        addEffect(IEEffects.INFECTION.get(), "感染");
        add("generator." + InfernalExpansion.MOD_ID + ".compat_world_type", null);
        addConfig("button.mobInteractions", "モブの相互作用");
        addConfig("button.mobSpawning", "モブのスポーン");
        addConfig("button.miscellaneous", "その他");
        addConfig("button.worldGeneration", "ワールド生成");
        addConfig("button.clientConfig", "クライアント");
        addConfig("title", "インファーナル・エキスパンション コンフィグ");
        addConfig("title.mobInteractions", "モブの相互作用");
        addConfig("title.mob_spawning", "モブのスポーン");
        addConfig("title.miscellaneous", "その他");
        addConfig("title.worldGeneration", "ワールド生成");
        addConfig("title.clientConfig", "クライアント");
        addConfig("subtitle.spawnable_biomes", "モブのスポーンバイオームの設定");
        addConfig("option.piglinFearWarpbeetle", "ピグリンがワープビートルを恐れる");
        addConfig("option.piglinFearEmbody", "ピグリンがエンボディーを恐れる");
        addConfig("option.piglinFearDwarf", "ピグリンがブラックストーンドワーフを恐れる");
        addConfig("option.hoglinFearWarpbeetle", "ホグリンがワープビートルを恐れる");
        addConfig("option.hoglinFearEmbody", "ホグリンがエンボディーを恐れる");
        addConfig("option.spiderAttackWarpbeetle", "クモがワープビートルを攻撃する");
        addConfig("option.skeletonAttackPiglin", "スケルトンがピグリンを攻撃する");
        addConfig("option.skeletonAttackBrute", "スケルトンがピグリンブルートを攻撃する");
        addConfig("option.skeletonAttackEmbody", "スケルトンがエンボディーを攻撃する");
        addConfig("option.skeletonAttackGiant", "スケルトンがバサルトジャイアントを攻撃する");
        addConfig("option.piglinAttackSkeleton", "ピグリンがスケルトンを攻撃する");
        addConfig("option.piglinAttackVoline", "ピグリンがヴォリンを攻撃する");
        addConfig("option.bruteAttackSkeleton", "ピグリンブルートがスケルトンを攻撃する");
        addConfig("option.bruteAttackVoline", "ピグリンブルートがヴォリンを攻撃する");
        addConfig("option.ghastAttackEmbody", "ガストがエンボディーを攻撃する");
        addConfig("option.ghastAttackVoline", "ガストがヴォリンを攻撃する");
        addConfig("option.ghastAttackSkeleton", "ガストがスケルトンを攻撃する");
        addConfig("option.ghastAttackGlowsquito", "ガストがグロウスキートを攻撃する");
        addConfig("option.glowsquitoAttackDwarf", "グロウスキートがブラックストーンドワーフを攻撃する");
        addConfig("option.glowsquitoAttackLuminous", "グロウスキートが光輝を持ったモブを攻撃する");
        addConfig("option.dwarfAttackPiglin", "ブラックストーンドワーフがピグリンを攻撃する");
        addConfig("option.dwarfAttackZombiePiglin", "ブラックストーンドワーフがゾンビピグリンを攻撃する");
        addConfig("option.dwarfAttackSkeletalPiglin", "ブラックストーンドワーフがスケルトンピグリンを攻撃する");
        addConfig("option.dwarfAttackPlayer", "ブラックストーンドワーフがプレイヤーを攻撃する");
        addConfig("option.blindsightAttackGlowsquito", "ブラインドサイトがグロウスキートを攻撃する");
        addConfig("option.blindsightAttackPlayer", "ブラインドサイトがプレイヤーを攻撃する");
        addConfig("option.giantAttackMagmaCube", "バサルトジャイアントがマグマキューブを攻撃する");
        addConfig("option.embodyAttackPiglin", "エンボディーがピグリンを攻撃する");
        addConfig("option.embodyAttackPlayer", "エンボディーがプレイヤーを攻撃する");
        addConfig("option.volineAttackFireResistance", "ヴォリンが火炎耐性を持ったモブを攻撃する");
        addConfig("option.volineAttackPlayer", "ヴォリンがプレイヤーを攻撃する");
        addConfig("option.volineAttackMagmaCube", "ヴォリンがマグマキューブを攻撃する");
        addConfig("option.useHogchops", "ホグリンがホグリン肉をドロップする");
        addConfig("option.glowsilkSpeed", "グロウシルクモスの速度");
        addConfig("option.useThrowableBricks", null);
        addConfig("tooltip.piglinFearWarpbeetle", "ピグリンがワープビートルから逃げるかどうかを設定");
        addConfig("tooltip.piglinFearEmbody", "ピグリンがエンボディーから逃げるかどうかを設定");
        addConfig("tooltip.piglinFearDwarf", "ピグリンがブラックストーンドワーフから逃げるかどうかを設定");
        addConfig("tooltip.hoglinFearWarpbeetle", "ホグリンがワープビートルから逃げるかどうかを設定");
        addConfig("tooltip.hoglinFearEmbody", "ホグリンエンボディーから逃げるかどうかを設定");
        addConfig("tooltip.spiderAttackWarpbeetle", "クモとワープビートルが戦うかどうかを設定");
        addConfig("tooltip.skeletonAttackPiglin", "スケルトンがピグリンを攻撃するかどうかを設定");
        addConfig("tooltip.skeletonAttackBrute", "スケルトンがピグリンブルートを攻撃するかどうかを設定");
        addConfig("tooltip.skeletonAttackEmbody", "スケルトンとエンボディーが戦うかどうかを設定");
        addConfig("tooltip.skeletonAttackGiant", "スケルトンとバサルトジャイアントが戦うかどうかを設定");
        addConfig("tooltip.piglinAttackSkeleton", "ピグリンがスケルトンを攻撃するかどうかを設定");
        addConfig("tooltip.piglinAttackVoline", "ピグリンがヴォリンを攻撃するかどうかを設定");
        addConfig("tooltip.bruteAttackSkeleton", "ピグリンブルートがスケルトンを攻撃するかどうかを設定");
        addConfig("tooltip.bruteAttackVoline", "ピグリンブルートがヴォリンを攻撃するかどうかを設定");
        addConfig("tooltip.ghastAttackEmbody", "ガストがエンボディーを攻撃するかどうかを設定");
        addConfig("tooltip.ghastAttackVoline", "ガストがヴォリンを攻撃するかどうかを設定");
        addConfig("tooltip.ghastAttackSkeleton", "ガストがスケルトンを攻撃するかどうかを設定");
        addConfig("tooltip.ghastAttackGlowsquito", "ガストグロウスキートを攻撃するかどうかを設定");
        addConfig("tooltip.glowsquitoAttackDwarf", "グロウスキートとブラックストーンドワーフが戦うかどうかを設定");
        addConfig("tooltip.glowsquitoAttackLuminous", "グロウスキートが光輝を持っているモブを攻撃するかどうかを設定");
        addConfig("tooltip.dwarfAttackPiglin", "ブラックストーンドワーフがピグリンを攻撃するかどうかを設定");
        addConfig("tooltip.dwarfAttackZombiePiglin", "ブラックストーンドワーフがゾンビピグリンを攻撃するかどうかを設定");
        addConfig("tooltip.dwarfAttackSkeletalPiglin", "ブラックストーンドワーフがスケルトンピグリンを攻撃するかどうかを設定");
        addConfig("tooltip.dwarfAttackPlayer", "ブラックストーンドワーフがプレイヤーを攻撃するかどうかを設定");
        addConfig("tooltip.blindsightAttackGlowsquito", "ブラインドサイトがグロウスキートを攻撃するかどうかを設定");
        addConfig("tooltip.blindsightAttackPlayer", "ブラインドサイトがプレイヤーを攻撃するかどうかを設定");
        addConfig("tooltip.giantAttackMagmaCube", "バサルトジャイアントがマグマキューブを攻撃するかどうかを設定");
        addConfig("tooltip.embodyAttackPiglin", "エンボディーがピグリンを攻撃するかどうかを設定");
        addConfig("tooltip.embodyAttackPlayer", "エンボディーがプレイヤーを攻撃するかどうかを設定");
        addConfig("tooltip.volineAttackFireResistance", "ヴォリンが火炎耐性を持っているモブを攻撃するかどうかを設定");
        addConfig("tooltip.volineAttackPlayer", "ヴォリンがプレイヤーを攻撃するかどうかを設定");
        addConfig("tooltip.volineAttackMagmaCube", "ヴォリンが小さなマグマキューブを攻撃するかどうかを設定");
        addConfig("tooltip.useHogchops", "ホグリンのドロップする豚肉をホグリン肉に置き換えるかを設定");
        addConfig("tooltip.glowsilkSpeed", "グロウシルクモスの飛行速度を設定");
        addConfig("tooltip.useThrowableBricks", null);
        addConfig("option.volineWastes.enable", "ヴォリンがネザーの荒野にスポーン");
        addConfig("option.shroomloinCrimson.enable", "シュルームロインが真紅の森にスポーン");
        addConfig("option.volineCrimson.enable", "ヴォリン真紅の森にスポーン");
        addConfig("option.warpbeetleWarped.enable", "ワープビートル歪んだ森にスポーン");
        addConfig("option.giantDeltas.enable", "バサルトジャイアントが玄武岩の三角州にスポーン");
        addConfig("option.embodySSV.enable", "エンボディーがソウルサンドの谷にスポーン");
        addConfig("option.glowsilkGSC.enable", "グロウシルクモスがグロウストーンの渓谷にスポーン");
        addConfig("option.glowsilkDeltas.enable", "グロウシルクモスが玄武岩の三角州にスポーン");
        addConfig("option.glowsilkCrimson.enable", "グロウシルクモスが真紅の森にスポーン");
        addConfig("tooltip.volineWastes.enable", "ヴォリンがネザーの荒野にスポーンするかどうかを設定");
        addConfig("tooltip.shroomloinCrimson.enable", "シュルームロインが真紅の森にスポーンするかどうかを設定");
        addConfig("tooltip.volineCrimson.enable", "ヴォリンが真紅の森にスポーンにスポーンするかどうかを設定");
        addConfig("tooltip.warpbeetleWarped.enable", "ワープビートルが歪んだ森にスポーンにスポーンするかどうかを設定");
        addConfig("tooltip.giantDeltas.enable", "バサルトジャイアントが玄武岩の三角州にスポーンするかどうかを設定");
        addConfig("tooltip.embodySSV.enable", "エンボディーがソウルサンドの谷にスポーンするかどうかを設定");
        addConfig("tooltip.glowsilkGSC.enable", "グロウシルクモスがグロウストーンの渓谷にスポーンするかどうかを設定");
        addConfig("tooltip.glowsilkDeltas.enable", "グロウシルクモスが玄武岩の三角州にスポーンするかどうかを設定");
        addConfig("tooltip.glowsilkCrimson.enable", "グロウシルクモスが真紅の森にスポーンするかどうかを設定");
        addConfig("option.biomesListIsWhitelist", "ホワイトリストかブラックリスト");
        addConfig("option.biomesList", "バイオーム一覧");
        addConfig("tooltip.biomesListIsWhitelist", "バイオームリストがホワイトリスト (オン)、またはブラックリスト (オフ)として機能するかを設定します。変更を適用するにはゲームを再起動する必要があります。");
        addConfig("tooltip.biomesList", "ブラックリスト、またはブラックリストに追加するバイオームの一覧。コンマで区切ることで複数設定できます。他Modの全てのネザーバイオームを含める場合は空白にしてください。変更を適用するにはゲームを再起動する必要があります。");
        addConfig("option.spawnrate", "スポーン率");
        addConfig("tooltip.volineWastes.spawnrate", "ヴォリンのネザーの荒野でのスポーン率を設定");
        addConfig("tooltip.shroomloinCrimson.spawnrate", "シュルームロインの真紅の森でのスポーン率を設定");
        addConfig("tooltip.volineCrimson.spawnrate", "ヴォリンの真紅の森でのスポーン率を設定");
        addConfig("tooltip.warpbeetleWarped.spawnrate", "ワープビートルの歪んだ森でのスポーン率を設定");
        addConfig("tooltip.giantDeltas.spawnrate", "バサルトジャイアントの玄武岩の三角州でのスポーン率を設定");
        addConfig("tooltip.embodySSV.spawnrate", "エンボディーのソウルサンドの谷でのスポーン率を設定");
        addConfig("tooltip.glowsilkGSC.spawnrate", "グロウシルクモスのグロウストーンの渓谷でのスポーン率を設定");
        addConfig("tooltip.glowsilkDeltas.spawnrate", "グロウシルクモスの玄武岩の三角州でのスポーン率を設定");
        addConfig("tooltip.glowsilkCrimson.spawnrate", "グロウシルクモスの真紅の森でのスポーン率を設定");
        addConfig("option.isShroomlightGrowable", "シュルームライトの成長");
        addConfig("option.shroomlightGrowChance", "シュルームライトの成長の確率");
        addConfig("option.luminousFungusActivateDistance", "輝くキノコの反応する距離");
        addConfig("tooltip.isShroomlightGrowable", "シュルームライトに骨粉を使用した際に、シュルームライトの涙を生成するかどうかを設定します。");
        addConfig("tooltip.shroomlightGrowChance", "シュルームライトに骨粉を使用した際に、シュルームライトの涙が生成される確率を設定します。");
        addConfig("tooltip.luminousFungusActivateDistance", "輝くキノコの反応する距離を設定します。(大きな値を設定するほどパフォーマンスに影響します。)");
        addConfig("option.fireChargeExplosion", "ファイヤーチャージの爆発");
        addConfig("option.jerkyEffectDuration", "干し肉の効果時間");
        addConfig("option.jerkyEffectAmplifier", "干し肉の効果レベル");
        addConfig("tooltip.fireChargeExplosion", "ファイヤーチャージを投げた際に爆発するかどうかを設定");
        addConfig("tooltip.jerkyEffectDuration", "干し肉を食べた際に与えられるエフェクトの効果時間を設定");
        addConfig("tooltip.jerkyEffectAmplifier", "干し肉を食べた際に与えられるエフェクトの効果レベルを設定");
        addConfig("option.luminousRefreshDelay", "光輝エフェクトの更新時間");
        addConfig("tooltip.luminousRefreshDelay", "光輝エフェクトの更新時間をTickで設定");
        addConfig("option.luminousFungusGivesEffect", "輝くキノコが光輝を与える");
        addConfig("tooltip.luminousFungusGivesEffect", "輝くキノコが触れたモブに光輝を与えるかどうかを設定");
        add(InfernalExpansion.MOD_ID + ".commands.setdimensionspawn.success.single", "%s'のスポーン地点を %s, %s, %s [%s] %s に設定しました。");
        add(InfernalExpansion.MOD_ID + ".commands.setdimensionspawn.success.multiple", "%s のスポーン地点を %s, %s, %s [%s] %s に設定しました。");
        add(IEBlocks.LUMINOUS_STEM.get(), null);
        add(IEBlocks.STRIPPED_LUMINOUS_STEM.get(), null);
        add(IEBlocks.LUMINOUS_HYPHAE.get(), null);
        add(IEBlocks.STRIPPED_LUMINOUS_HYPHAE.get(), null);
        add(IEItems.SPIRIT_EYE.get(), null);
        add(IEItems.KINETIC_TONGUE_WHIP.get(), null);
        addEntitySubtitles(IEEntityTypes.VOLINE.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.SHROOMLOIN.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.BASALT_GIANT.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.BLINDSIGHT.get(), null, null, null);
        add("subtitles.entity." + ForgeRegistries.ENTITIES.getKey(IEEntityTypes.BLINDSIGHT.get()).getPath() + ".leap", null);
        addEntitySubtitles(IEEntityTypes.WARPBEETLE.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.EMBODY.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.GLOWSILK_MOTH.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.GLOWSQUITO.get(), null, null, null);
        addEntitySubtitles(IEEntityTypes.BLACKSTONE_DWARF.get(), null, null, null);
    }

}
